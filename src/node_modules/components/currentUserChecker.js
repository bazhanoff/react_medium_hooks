import { useEffect, useContext } from 'react'

import useFetch from 'hooks/useFetch'
import useLocalStorage from 'hooks/useLocalStorage'
import userCheckerService from 'api/services/userCheckerService'
import { CurrentUserContext } from 'contexts/currentUser'

const CurrentUserChecker = ({ children }) => {
    const [, setCurrentUserState] = useContext(CurrentUserContext)
    const [{ response }, doFetch ] = useFetch(userCheckerService.get)
    const [ token ] = useLocalStorage('token')


    useEffect(() => {
        if (!token) {
            setCurrentUserState(state => ({
                ...state,
                isLoggedIn: false,
            }))
            return 
        }
        doFetch()
        setCurrentUserState(state => ({
            ...state,
            isLoading: true,
        }))
    }, [doFetch, setCurrentUserState, token])

    useEffect(() => {
        if (response) {
            setCurrentUserState(state => ({
                ...state,
                isLoggedIn: true,
                isLoading: false,
                currentUser: response.user,
            }))
        }
    }, [response, setCurrentUserState])

    return children
}

export default CurrentUserChecker